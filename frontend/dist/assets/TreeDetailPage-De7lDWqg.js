import{r as n,a as f,m as j,u as P,j as e,e as S,d as v}from"./index-Dzr7PBfw.js";import"./IconButton-CsSKj4cW.js";import{P as g,T as x,M as T,a as y,b as N,c as b,C as A,d as D,e as M,f as k,g as w}from"./TreeDetailLayout-Cc_P7nbu.js";import"./ExportButton-BvRt6B34.js";import"./FormElements-RQ7qOmSO.js";import"./Table-CZfmBv9T.js";import"./ChartComponents-CUdy75Zt.js";import{u as C}from"./MapSidebar-DZT3HTLm.js";import"./vendor-BtP0CW_r.js";import"./useKeyboardNavigation-BRnXQ3uS.js";const p=[{id:1,name:"Tree A-001",species:"Pine",height:2.4,health:"healthy",lat:59.3293,lng:18.0686},{id:2,name:"Tree A-002",species:"Oak",height:2.1,health:"healthy",lat:59.33,lng:18.069},{id:3,name:"Tree A-003",species:"Birch",height:1.8,health:"warning",lat:59.3285,lng:18.0675},{id:4,name:"Tree A-004",species:"Spruce",height:1.5,health:"critical",lat:59.331,lng:18.07},{id:5,name:"Tree A-005",species:"Pine",height:2.7,health:"healthy",lat:59.3275,lng:18.066},{id:6,name:"Tree A-006",species:"Oak",height:2.3,health:"healthy",lat:59.332,lng:18.071},{id:7,name:"Tree A-007",species:"Birch",height:1.9,health:"warning",lat:59.3265,lng:18.065},{id:8,name:"Tree A-008",species:"Spruce",height:2.5,health:"healthy",lat:59.333,lng:18.072}],E=[{date:"2024-01-15",height:2.4,diameter:8.2,health:"healthy"},{date:"2024-02-15",height:2.3,diameter:8.1,health:"healthy"},{date:"2024-03-15",height:2.2,diameter:8,health:"healthy"},{date:"2024-04-15",height:2.1,diameter:7.9,health:"warning"},{date:"2024-05-15",height:2,diameter:7.8,health:"warning"},{date:"2024-06-15",height:1.9,diameter:7.7,health:"warning"},{date:"2024-07-15",height:1.8,diameter:7.6,health:"critical"},{date:"2024-08-15",height:1.7,diameter:7.5,health:"critical"},{date:"2024-09-15",height:1.6,diameter:7.4,health:"critical"},{date:"2024-10-15",height:1.5,diameter:7.3,health:"critical"}],I=s=>{const[r,t]=n.useState(null),[a,h]=n.useState([]),[i,c]=n.useState(!0),[u,l]=n.useState(null);return n.useEffect(()=>{s&&(async()=>{try{c(!0),l(null),await new Promise(d=>setTimeout(d,500));const o=p.find(d=>d.id===parseInt(s));if(!o){l("Tree not found");return}t(o),h(E)}catch{l("Failed to load tree data")}finally{c(!1)}})()},[s]),{tree:r,measurements:a,loading:i,error:u,trees:p}},B=(s,r)=>{const t=f(),a=n.useMemo(()=>r.findIndex(l=>l.id===parseInt(s)),[r,s]),h=a>0,i=a<r.length-1,c=n.useCallback(()=>{h&&t(`/tree/${r[a-1].id}`)},[t,r,a,h]),u=n.useCallback(()=>{i&&t(`/tree/${r[a+1].id}`)},[t,r,a,i]);return{hasPrevious:h,hasNext:i,handlePreviousTree:c,handleNextTree:u,currentIndex:a}},H=v.div`
  background: #fee2e2;
  color: #991b1b;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid #fecaca;
  text-align: center;
`,Q=()=>{const{id:s}=j(),{user:r}=P(),{tree:t,measurements:a,loading:h,error:i,trees:c}=I(s),{hasPrevious:u,hasNext:l,handlePreviousTree:m,handleNextTree:o}=B(s,c),d=C(t);return h?e.jsxs(g,{children:[e.jsx(x,{onPrevious:m,onNext:o,onShare:d,hasPrevious:!1,hasNext:!1}),e.jsx(T,{children:e.jsx(S,{text:"Loading tree details..."})})]}):i||!t?e.jsxs(g,{children:[e.jsx(x,{onPrevious:m,onNext:o,onShare:d,hasPrevious:!1,hasNext:!1}),e.jsx(T,{children:e.jsx(H,{children:i||"Tree not found"})})]}):e.jsxs(g,{children:[e.jsx(x,{onPrevious:m,onNext:o,onShare:d,hasPrevious:u,hasNext:l}),e.jsxs(T,{children:[e.jsxs(y,{children:[e.jsx(N,{children:t.name}),e.jsxs(b,{children:[t.species," â€¢ Forest ",t.id<=4?"A":"B"]})]}),e.jsxs(A,{children:[e.jsxs(D,{children:[e.jsx(M,{tree:t}),e.jsx(k,{measurements:a})]}),e.jsx(w,{tree:t})]})]})]})};export{Q as TreeDetailPage};
